{"version":3,"sources":["config.js","reducers/mapClassReducer.js","reducers/formClassReducer.js","reducers/routeReducer.js","components/MainMenu.js","functions/formatter.js","components/routes/Leg.js","reducers/trailReducer.js","components/routes/LegPreview.js","components/routes/RoutePreview.js","components/routes/Routes.js","apis/autocomplete.js","components/AutocompleteSearchForm.js","reducers/backgroundMapReducer.js","apis/planRoute.js","apis/geocoding.js","components/SearchForm.js","components/BackgroundMap.js","App.js","store.js","index.js"],"names":["PORT","process","module","exports","WSPORT","setMapClass","value","type","mapClassReducer","state","arguments","length","undefined","action","setFormClass","formClassReducer","setRoutes","routeReducer","mapDispatchToProps","connect","_ref","react_default","a","createElement","className","onClick","formatTime","time","date","Date","hour","getHours","minute","getMinutes","concat","Leg","leg","startTime","distance","result","floorDistance","Math","round","distanceRemainder","distanceKm","floor","formatDistance","from","name","Icon","trailReducer","LegPrewiev","color","icon","legDepartureTime","mode","console","log","LegSegmentPreview","styled","span","_templateObject","LegPreviewContainer","_templateObject2","LegInfoContainer","_templateObject3","BarContainer","_templateObject4","Bar","_templateObject5","props","defaultProps","key","stop","trip","route","shortName","RoutePreview","arrival","legs","endTime","departure","legAmount","vehiclelegs","forEach","maxwidth","map","LegPreview","classnameProp","code","setActiveTrail","routes","_useState","useState","_useState2","Object","slicedToArray","activeIndex","setActiveIndex","itineraryid","handleClick","e","titleProps","index","isActive","Fragment","Accordion","fluid","Title","active","routes_RoutePreview","Content","routes_Leg","autocomplete","asyncToGenerator","regenerator_default","mark","_callee","parameter","resultFilterer","searchUrl","autocompleteUrl","geobox","venues","streets","addresses","stops","wrap","_context","prev","next","search","formattedResults","data","features","res","title","properties","label","layer","axios","get","sent","abrupt","_","take","t0","_x","apply","this","AutocompleteForm","fieldName","inputValue","setInputValue","loading","setLoading","_useState3","_useState4","results","setResults","_useDebouncedCallback","useDebouncedCallback","_ref2","autocompleteResults","resetComponent","bounce","Search","onSearchChange","target","onResultSelect","_ref3","placeholder","resultRenderer","_ref4","iconName","setBackgroundLocation","backgroundReducer","planRoute","gql","planRoute_templateObject","geocode","coordinates","geometry","setClassState","classState","setFrom","to","setTo","_useState5","_useState6","_useState7","_useState8","planTime","setPlanTime","_useState9","_useState10","planDate","setPlanDate","_useState11","_useState12","timeMethod","setTimeMethod","setCurrentTimeAndDate","now","months","getMonth","years","getFullYear","days","getDate","getCurrentDate","client","useApolloClient","useEffect","submit","event","coordinatesFrom","coordinatesTo","plannedRoute","newRoutes","preventDefault","geocoding","query","variables","latFrom","lonFrom","latTo","lonTo","arriveBy","Segment","raised","style","marginBottom","Form","onSubmit","Field","AutocompleteSearchForm","Group","inline","Select","defaultValue","selection","options","text","onChange","Input","maxWidth","Button","animated","primary","visible","hidden","routes_Routes","Loader","marginTop","setLatlng","latlng","backgroundMapReducer","activeTrail","mapClass","trails","setTrails","center","alltrails","reduce","total","current","toConsumableArray","decodedTrail","polyUtil","decode","legGeometry","points","push","Map","zoom","maxZoom","attributionControl","zoomControl","doubleClickZoom","scrollWheelZoom","dragging","animate","easeLinearity","boundsOptions","padding","onclick","lat","lng","trail","Polyline","positions","TileLayer","url","attribution","App","components_MainMenu","components_BackgroundMap","components_SearchForm","reducer","combineReducers","store","createStore","applyMiddleware","thunk","wsLink","WebSocketLink","uri","config","reconnect","httpLink","createHttpLink","authLink","setContext","headers","token","localStorage","getItem","objectSpread","authorization","link","split","_getMainDefinition","getMainDefinition","kind","operation","ApolloClient","cache","InMemoryCache","ReactDOM","render","react_apollo_esm","ApolloContext","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.0eef9b56.chunk.js","sourcesContent":["if (process.env.NODE_ENV !== \"production\") {\n  require(\"dotenv\").config()\n}\n\nlet WSPORT = process.env.REACT_APP_WEBSOCKET_PORT\nlet PORT = process.env.REACT_APP_HTTP_PORT\n\nif (process.env.NODE_ENV === \"production\") {\n  PORT = process.env.PORT\n}\n\nmodule.exports = {\n  WSPORT,\n  PORT\n}\n","const mapClassReducer = (state = \"startMap\", action) => {\n  switch (action.type) {\n    case \"SET_MAP_CLASS\":\n      return action.value\n    default:\n      return state\n  }\n}\nexport const setMapClass = value => {\n  return {\n    type: \"SET_MAP_CLASS\",\n    value\n  }\n}\nexport default mapClassReducer\n","const formClassReducer = (state = \"startForm\", action) => {\n  switch (action.type) {\n    case \"SET_FORM_CLASS\":\n      return action.value\n    default:\n      return state\n  }\n}\nexport const setFormClass = value => {\n  return {\n    type: \"SET_FORM_CLASS\",\n    value\n  }\n}\nexport default formClassReducer\n","const routeReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"SET_ROUTES\":\n      return action.value\n    default:\n      return state\n  }\n}\nexport const setRoutes = value => {\n  return {\n    type: \"SET_ROUTES\",\n    value\n  }\n}\nexport default routeReducer\n","import React from \"react\";\nimport { setMapClass } from \"../reducers/mapClassReducer\";\nimport { setFormClass } from \"../reducers/formClassReducer\";\nimport { setRoutes } from \"../reducers/routeReducer\";\nimport { connect } from \"react-redux\";\n\nconst MainMenu = ({ setMapClass, setFormClass, setRoutes }) => {\n  const handleClick = () => {\n    setFormClass(\"startForm\");\n    setMapClass(\"startMap\");\n    setRoutes([]);\n  };\n\n  return (\n    <div className=\"mainHeader\">\n      <span className=\"mainHeader logo\" onClick={handleClick} />\n    </div>\n  );\n};\n\nconst mapDispatchToProps = {\n  setMapClass,\n  setFormClass,\n  setRoutes,\n};\n\nexport default connect(null, mapDispatchToProps)(MainMenu);\n","export const formatDistance = (distance) => {\n  const floorDistance = Math.round(distance)\n  let result\n  if (floorDistance > 1000) {\n    const distanceRemainder = Math.round((floorDistance % 1000) / 100)\n    const distanceKm = Math.floor(floorDistance / 1000)\n    result = `${distanceKm}.${distanceRemainder}km`\n  } else {\n    result = `${floorDistance}m`\n  }\n  return result\n}\n\nexport const formatDuration = (durationInSeconds) => {\n  const durationHours = Math.floor(durationInSeconds / 3600)\n  const durationMinutes = Math.floor((durationInSeconds % 3600) / 60)\n  const conditionalHours = durationHours === 0 ? \"\" : `${durationHours} h `\n  return `${conditionalHours}${durationMinutes} min`\n}\n\nexport const formatTime = (time) => {\n  const date = new Date(time)\n  const hour = date.getHours()\n  const minute = date.getMinutes()\n  if (minute < 10) {\n    return `${hour}:0${minute}`\n  }\n  return `${hour}:${minute}`\n}\n\nexport const getCurrentDate = () => {\n  const date = new Date()\n  const months =\n    date.getMonth() < 9 ? `0${date.getMonth() + 1}` : `${date.getMonth() + 1}`\n  const years = date.getFullYear()\n  const days = date.getDate() < 10 ? `0${date.getDate()}` : `${date.getDate()}`\n  return `${years}-${months}-${days}`\n}\n","import React from \"react\";\nimport { formatDistance, formatTime } from \"../../functions/formatter\";\nimport { Icon } from \"semantic-ui-react\";\n\nconst Leg = ({ leg }) => {\n  const startTime = formatTime(leg.startTime);\n  const distance = formatDistance(leg.distance);\n\n  if (true)\n    return (\n      <li className=\"timelineEvent\">\n        {/* <label className=\"timelineIcon\" /> */}\n        {/* <div className=\"timelineBody\"> */}\n        <span className=\"timelineTime\">{startTime}</span>\n        <span className=\"timelineSpacer\" />\n\n        <span className=\"timelineFrom\">{leg.from.name}</span>\n\n        <Icon name=\"blind\" />\n        <span className=\"timelineInfo\">{distance}</span>\n        {/* </div> */}\n      </li>\n    );\n\n  return (\n    <div>\n      <p />\n      <div>\n        <b>{leg.from.name}</b>\n        <div>Mode: {leg.mode}</div>\n        {leg.trip && (\n          <div>\n            {leg.trip.route.shortName} {leg.trip.tripHeadsign}\n          </div>\n        )}\n        <div>Distance: {distance}</div>\n        <div>Departure: {startTime}</div>\n        <div>To: {leg.to.name}</div>\n      </div>\n    </div>\n  );\n};\nexport default Leg;\n","const trailReducer = (state = 0, action) => {\n  switch (action.type) {\n    case \"SET_ACTIVE_TRAIL\":\n      return action.value\n    default:\n      return state\n  }\n}\n\nexport const setActiveTrail = value => {\n  return {\n    type: \"SET_ACTIVE_TRAIL\",\n    value\n  }\n}\n\nexport default trailReducer\n","import React from \"react\";\nimport { formatTime } from \"../../functions/formatter\";\nimport { Icon } from \"semantic-ui-react\";\nimport styled from \"styled-components\";\n\nconst LegPrewiev = ({ leg }) => {\n  let color = \"purple\";\n  let icon = \"train\";\n  const legDepartureTime = formatTime(leg.startTime);\n\n  if (leg.mode === \"SUBWAY\") {\n    color = \"orange\";\n    icon = \"subway\";\n  }\n  if (leg.mode === \"BUS\") {\n    color = \"blue\";\n    icon = \"bus\";\n  }\n  if (leg.mode === \"WALK\") {\n    color = \"lightblue\";\n    icon = \"blind\";\n  }\n\n  console.log(\"leg:\", leg);\n\n  const LegSegmentPreview = styled.span`\n    flex-grow: 1;\n    overflow: hidden;\n    position: relative;\n    white-space: nowrap;\n    ${\"\" /* maxwidth: ${(props) => props.maxWidth * 2}; */}\n  `;\n\n  // LegSegmentPreview.defaultProps = {\n  //   maxwidth,\n  // };\n\n  const LegPreviewContainer = styled.span`\n    position: relative;\n    display: flexbox;\n    width: 150%;\n    flex-wrap: wrap;\n    flex-grow: 2;\n    ${\"\" /* left: 8%; */}\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between;\n  `;\n\n  const LegInfoContainer = styled.span`\n    position: inherit;\n    display: flex;\n    flex-direction: column;\n    flex-grow: 1;\n    width: 100%;\n    left: 0%;\n    align-items: left;\n    justify-content: space-between;\n    z-index: 10;\n  `;\n\n  const BarContainer = styled.span`\n    ${\"\" /* position: absolute; */}\n    display: flex;\n    height: 100%;\n    width: 100%;\n    align-items: center;\n  `;\n\n  const Bar = styled.span`\n    width: 100%;\n    background-color: ${(props) => props.color};\n\n    height: 7px;\n    z-index: 0;\n    border-radius: 3px;\n  `;\n  Bar.defaultProps = {\n    color,\n  };\n\n  console.log(\"color:\", color);\n  return (\n    <LegPreviewContainer>\n      <LegInfoContainer>\n        {leg.mode === \"WALK\" ? null : (\n          <LegSegmentPreview key={leg.from.name}>\n            {leg.from.stop.name}\n          </LegSegmentPreview>\n        )}\n        <div>\n          <Icon name={icon} />\n          {leg.trip.route.shortName}\n        </div>\n        {legDepartureTime}\n      </LegInfoContainer>\n\n      <BarContainer>\n        <Bar color={color} />\n      </BarContainer>\n    </LegPreviewContainer>\n  );\n};\n\nexport default LegPrewiev;\n","import React from \"react\";\nimport { formatTime } from \"../../functions/formatter\";\nimport LegPrewiev from \"./LegPreview\";\n\nconst RoutePreview = ({ route }) => {\n  const arrival = formatTime(route.legs[route.legs.length - 1].endTime);\n  const departure = formatTime(route.legs[0].startTime);\n  const legAmount = route.legs.length;\n\n  let vehiclelegs = 0;\n  route.legs.forEach((leg) => {\n    if (leg.mode !== \"WALK\") vehiclelegs++;\n  });\n\n  const maxwidth = 42 / vehiclelegs + \"ch\";\n\n  return (\n    <span className=\"routePreviewContainer\">\n      <span>{departure}</span>\n      {route.legs.map((leg) => {\n        if (leg.mode === \"WALK\" && legAmount !== 1) {\n          return null;\n        }\n        return (\n          <span>\n            {leg.mode === \"WALK\" && legAmount !== 1 ? null : (\n              <LegPrewiev\n                classnameProp={`${leg.from.stop.code}${leg.startTime}`}\n                leg={leg}\n                maxwidth={maxwidth}\n              />\n            )}\n          </span>\n        );\n      })}\n      <span>{arrival}</span>\n    </span>\n  );\n};\nexport default RoutePreview;\n","import React, { useState } from \"react\";\nimport Leg from \"./Leg\";\nimport { Accordion } from \"semantic-ui-react\";\nimport { setActiveTrail } from \"../../reducers/trailReducer\";\nimport { connect } from \"react-redux\";\nimport RoutePreview from \"./RoutePreview\";\n\nconst Routes = ({ setActiveTrail, routes }) => {\n  const [activeIndex, setActiveIndex] = useState(-1);\n  let itineraryid = -1;\n\n  const handleClick = (e, titleProps) => {\n    const { index } = titleProps;\n    const isActive = activeIndex === index ? -1 : index;\n    if (isActive >= 0) {\n      setActiveTrail(isActive);\n    }\n    setActiveIndex(isActive);\n  };\n\n  if (routes.length === 0) return <></>;\n\n  return (\n    <>\n      <Accordion fluid styled>\n        {routes.map((route) => {\n          itineraryid++;\n          return (\n            <>\n              <Accordion.Title\n                onClick={handleClick}\n                index={itineraryid}\n                active={activeIndex === itineraryid}\n              >\n                <span key={route.distance}>\n                  <RoutePreview route={route} />\n                </span>\n              </Accordion.Title>\n              <Accordion.Content active={activeIndex === itineraryid}>\n                <span className=\"timeline\">\n                  {route.legs.map((leg) => (\n                    <div key={leg.distance}>\n                      <Leg leg={leg} />\n                    </div>\n                  ))}\n                </span>\n              </Accordion.Content>\n            </>\n          );\n        })}\n      </Accordion>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    routes: state.routeReducer,\n  };\n};\n\nconst mapDispatchToProps = {\n  setActiveTrail,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Routes);\n","import axios from \"axios\"\nimport _ from \"lodash\"\n\nconst autocomplete = async parameter => {\n  let result = []\n\n  const resultFilterer = search => {\n    const formattedResults = search.data.features.map(res => ({\n      title: res.properties.label,\n      layer: res.properties.layer\n    }))\n    result = result.concat(formattedResults)\n  }\n\n  if (parameter) {\n    try {\n      const searchUrl = \"https://api.digitransit.fi/geocoding/v1/search\"\n      const autocompleteUrl =\n        \"https://api.digitransit.fi/geocoding/v1/autocomplete\"\n\n      const geobox =\n        \"boundary.polygon=25.5345%2060.2592%2C25.3881%2060.1693%2C25.3559%2060.102%2C25.3293%2059.9371%2C24.2831%2059.78402%2C24.2721%2059.95501%2C24.2899%2060.00895%2C24.3087%2060.01947%2C24.1994%2060.12753%2C24.1362%2060.1114%2C24.1305%2060.12847%2C24.099%2060.1405%2C24.0179%2060.1512%2C24.0049%2060.1901%2C24.0445%2060.1918%2C24.0373%2060.2036%2C24.0796%2060.2298%2C24.1652%2060.2428%2C24.3095%2060.2965%2C24.3455%2060.2488%2C24.428%2060.3002%2C24.5015%2060.2872%2C24.4888%2060.3306%2C24.5625%2060.3142%2C24.5957%2060.3242%2C24.6264%2060.3597%2C24.666%2060.3638%2C24.7436%2060.3441%2C24.9291%2060.4523%2C24.974%2060.5253%2C24.9355%2060.5131%2C24.8971%2060.562%2C25.0388%2060.5806%2C25.1508%2060.5167%2C25.1312%2060.4938%2C25.0385%2060.512%2C25.057%2060.4897%2C25.0612%2060.4485%2C25.1221%2060.4474%2C25.1188%2060.4583%2C25.149%2060.4621%2C25.1693%2060.5062%2C25.2242%2060.5016%2C25.3661%2060.4118%2C25.3652%2060.3756%2C25.5345%2060.2592&size=4\"\n\n      const venues = await axios.get(\n        `${searchUrl}?text=${parameter}&focus.point.lat=60.168656&focus.point.lon=24.940899&layers=venue&${geobox}`\n      )\n      resultFilterer(venues)\n\n      const streets = await axios.get(\n        `${searchUrl}?text=${parameter}&focus.point.lat=60.168656&focus.point.lon=24.940899&layers=street&${geobox}`\n      )\n\n      resultFilterer(streets)\n\n      const addresses = await axios.get(\n        `${searchUrl}?text=${parameter}&focus.point.lat=60.168656&focus.point.lon=24.940899&layers=address&${geobox}`\n      )\n\n      resultFilterer(addresses)\n\n      const stops = await axios.get(\n        `${autocompleteUrl}?text=${parameter}&focus.point.lat=60.168656&focus.point.lon=24.940899&layers=stop&${geobox}`\n      )\n      console.log(\"stops:\", stops)\n\n      resultFilterer(stops)\n\n      return _.take(result, 16)\n    } catch (error) {\n      console.log(\"REST API ERROR: \", error)\n    }\n  }\n}\n\nexport default autocomplete\n","import React, { useState } from \"react\"\nimport { Search, Icon } from \"semantic-ui-react\"\nimport autocomplete from \"../apis/autocomplete\"\nimport useDebouncedCallback from \"use-debounce/lib/callback\"\n\nconst AutocompleteForm = ({ fieldName, inputValue, setInputValue }) => {\n  const [loading, setLoading] = useState(false)\n  const [results, setResults] = useState([])\n  const [bounce] = useDebouncedCallback(\n    async value => {\n      if (value.length < 1) return resetComponent()\n\n      const autocompleteResults = await autocomplete(value)\n      console.log(\"autocompleteResults:\", autocompleteResults)\n\n      setLoading(false)\n      setResults(autocompleteResults)\n    },\n    200,\n    []\n  )\n\n  const resetComponent = () => {\n    setLoading(false)\n    setResults([])\n    setInputValue(\"\")\n  }\n\n  const handleResultSelect = (e, { result }) => setInputValue(result.title)\n\n  const resultRenderer = ({ title, layer }) => {\n    /* Return an appropriate icon based on the layer of the autofill result */\n    let iconName\n    if (layer === \"venue\") {\n      iconName = \"building\"\n    } else if (layer === \"stop\") {\n      iconName = \"flag\"\n    } else if (layer === \"address\") {\n      iconName = \"point\"\n    } else {\n      iconName = \"map signs\"\n    }\n    return (\n      <div>\n        <Icon name={iconName} />\n        {title}\n      </div>\n    )\n  }\n  return (\n    <Search\n      fluid\n      loading={loading}\n      onSearchChange={e => {\n        setLoading(true)\n        setInputValue(e.target.value)\n        bounce(e.target.value)\n      }}\n      onResultSelect={handleResultSelect}\n      results={results}\n      value={inputValue}\n      placeholder={fieldName}\n      resultRenderer={resultRenderer}\n    />\n  )\n}\n\nexport default AutocompleteForm\n","const backgroundReducer = (\n  state = [\n    [60.1673319317496, 24.80082397460938],\n    [60.158966553797576, 25.063716125488285]\n  ],\n  action\n) => {\n  switch (action.type) {\n    case \"SET_BACKGROUND_MAP_LOCATION\":\n      return action.value\n    default:\n      return state\n  }\n}\nexport const setBackgroundLocation = value => {\n  return {\n    type: \"SET_BACKGROUND_MAP_LOCATION\",\n    value\n  }\n}\n\nexport default backgroundReducer\n","import { gql } from \"apollo-boost\"\n\nconst planRoute = gql`\n  query planRoute(\n    $latFrom: Float\n    $lonFrom: Float\n    $latTo: Float\n    $lonTo: Float\n    $time: String\n    $date: String\n    $arriveBy: Boolean\n  ) {\n    planRoute(\n      latFrom: $latFrom\n      lonFrom: $lonFrom\n      latTo: $latTo\n      lonTo: $lonTo\n      time: $time\n      date: $date\n      arriveBy: $arriveBy\n    ) {\n      walkDistance\n      duration\n      legs {\n        legGeometry {\n          points\n        }\n        mode\n        startTime\n        endTime\n        trip {\n          route {\n            shortName\n            longName\n          }\n          tripHeadsign\n          stops {\n            name\n          }\n        }\n        from {\n          lat\n          lon\n          name\n          stop {\n            code\n            name\n          }\n        }\n        to {\n          lat\n          lon\n          name\n        }\n        distance\n      }\n    }\n  }\n`\nexport default planRoute\n","import axios from \"axios\"\n\nconst geocode = async value => {\n  const result = await axios.get(\n    `https://api.digitransit.fi/geocoding/v1/search?text=${value}&size=1`\n  )\n  const coordinates = result.data.features[0].geometry.coordinates\n  return coordinates\n}\n\nexport default geocode\n","import React, { useState, useEffect } from \"react\";\nimport { useApolloClient } from \"react-apollo-hooks\";\nimport Routes from \"./routes/Routes\";\nimport AutocompleteSearchForm from \"./AutocompleteSearchForm\";\nimport { Segment, Form, Button, Icon, Loader, Input } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { setRoutes } from \"../reducers/routeReducer\";\nimport { setBackgroundLocation } from \"../reducers/backgroundMapReducer\";\nimport { setMapClass } from \"../reducers/mapClassReducer\";\nimport { setFormClass } from \"../reducers/formClassReducer\";\nimport { formatTime, getCurrentDate } from \"../functions/formatter\";\nimport planRoute from \"../apis/planRoute\";\nimport geocoding from \"../apis/geocoding\";\n\n// why do these props turn into true?\n// Copypasting this below works\n// const TimeSelectors = ({ planDate, setPlanDate, planTime, setPlanTime }) => {\n//   console.log(\"planTime:\", planTime);\n//   console.log(\"setPlanTime:\", setPlanTime);\n//   return (\n//     <React.Fragment>\n//       <Form.Field>\n//         <Input\n//           defaultValue={planTime}\n//           type=\"time\"\n//           onChange={(event) => setPlanTime(event.target.value)}\n//         />\n//       </Form.Field>\n//       <Form.Field>\n//         <Input\n//           type=\"date\"\n//           style={{ maxWidth: \"163px\" }}\n//           value={planDate}\n//           onChange={(event) => setPlanDate(event.target.value)}\n//         />\n//       </Form.Field>\n//     </React.Fragment>\n//   );\n// };\n\nconst SearchForm = ({\n  setRoutes,\n  setBackgroundLocation,\n  setMapClass,\n  classState,\n  setClassState,\n}) => {\n  const [from, setFrom] = useState(\n    process.env.NODE_ENV === \"production\" ? \"\" : \"berliininkatu\"\n  );\n  const [to, setTo] = useState(\n    process.env.NODE_ENV === \"production\" ? \"\" : \"leppävaara\"\n  );\n  const [loading, setLoading] = useState(false);\n  const [planTime, setPlanTime] = useState(\"\");\n  const [planDate, setPlanDate] = useState(\"\");\n  const [timeMethod, setTimeMethod] = useState(\"NOW\");\n\n  const setCurrentTimeAndDate = () => {\n    setPlanTime(formatTime(Date.now()));\n    setPlanDate(getCurrentDate());\n  };\n\n  const client = useApolloClient();\n  useEffect(() => {\n    setCurrentTimeAndDate();\n  }, []);\n\n  const submit = async (event) => {\n    event.preventDefault();\n    setRoutes([]);\n    if (from !== \"\" && to !== \"\") {\n      setLoading(true);\n      setClassState(\"resultsForm\");\n\n      const coordinatesFrom = await geocoding(from);\n      const coordinatesTo = await geocoding(to);\n\n      setBackgroundLocation([\n        [coordinatesFrom[1], coordinatesFrom[0]],\n        [coordinatesTo[1], coordinatesTo[0]],\n      ]);\n      setMapClass(\"resultsMap\");\n\n      const plannedRoute = await client.query({\n        query: planRoute,\n        variables: {\n          latFrom: coordinatesFrom[1],\n          lonFrom: coordinatesFrom[0],\n          latTo: coordinatesTo[1],\n          lonTo: coordinatesTo[0],\n          time: `${planTime}:00`,\n          date: planDate,\n          arriveBy: timeMethod === \"ARRIVE_BY\",\n        },\n      });\n      const newRoutes = plannedRoute.data.planRoute;\n      setLoading(false);\n      setRoutes(newRoutes);\n    }\n  };\n\n  return (\n    <div className={classState}>\n      <Segment raised style={{ marginBottom: 0 }}>\n        <Form onSubmit={submit}>\n          <Form.Field>\n            <AutocompleteSearchForm\n              inputValue={from}\n              setInputValue={setFrom}\n              fieldName=\"from\"\n            />\n          </Form.Field>\n          <Form.Field>\n            <AutocompleteSearchForm\n              inputValue={to}\n              setInputValue={setTo}\n              fieldName=\"to\"\n            />\n          </Form.Field>\n\n          <Form.Group inline>\n            <Form.Select\n              defaultValue={\"NOW\"}\n              selection\n              fluid\n              options={[\n                { key: 1, value: \"NOW\", text: \"Now\" },\n                { key: 2, value: \"LEAVE_AT\", text: \"Leave at\" },\n                { key: 3, value: \"ARRIVE_BY\", text: \"Arrive by\" },\n              ]}\n              onChange={(event, { value }) => {\n                setTimeMethod(value);\n                if (value === \"NOW\") {\n                  setCurrentTimeAndDate();\n                }\n              }}\n            />\n\n            {timeMethod !== \"NOW\" ? (\n              <React.Fragment>\n                <Form.Field>\n                  <Input\n                    defaultValue={planTime}\n                    type=\"time\"\n                    onChange={(event) => setPlanTime(event.target.value)}\n                  />\n                </Form.Field>\n                <Form.Field>\n                  <Input\n                    type=\"date\"\n                    style={{ maxWidth: \"163px\" }}\n                    value={planDate}\n                    onChange={(event) => setPlanDate(event.target.value)}\n                  />\n                </Form.Field>\n              </React.Fragment>\n            ) : null}\n          </Form.Group>\n          <Form.Field>\n            <Button animated primary type=\"submit\">\n              <Button.Content visible>Search</Button.Content>\n              <Button.Content hidden>\n                <Icon name=\"arrow right\" />\n              </Button.Content>\n            </Button>\n          </Form.Field>\n        </Form>\n      </Segment>\n      <Routes />\n      <Loader\n        inline=\"centered\"\n        active={loading}\n        style={{ marginTop: \"10px\" }}\n      />\n    </div>\n  );\n};\nconst mapStateToProps = (state) => ({\n  routes: state.routeReducer,\n  classState: state.formClassReducer,\n});\nconst mapDispatchToProps = {\n  setRoutes,\n  setBackgroundLocation,\n  setMapClass,\n  setClassState: setFormClass,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchForm);\n","import React, { useState, useEffect } from \"react\"\nimport \"leaflet/dist/leaflet.css\"\nimport { Map, Marker, Popup, TileLayer, Polyline } from \"react-leaflet\"\nimport { connect } from \"react-redux\"\nimport { setBackgroundLocation } from \"../reducers/backgroundMapReducer\"\nimport { setActiveTrail } from \"../reducers/trailReducer\"\nimport polyUtil from \"polyline-encoded\"\n\nconst BackgroundMap = ({\n  latlng,\n  setLatlng,\n  routes,\n  activeTrail,\n  mapClass,\n}) => {\n  const [trails, setTrails] = useState([])\n  const [center, setCenter] = useState([60.16646629936403, 24.94205474853516])\n\n  useEffect(() => {\n    let alltrails = []\n    if (routes.length > 0) {\n      alltrails = routes.reduce((total, current, index) => {\n        if (index !== activeTrail) {\n          return [\n            ...total,\n            current.legs.map((leg) => {\n              const decodedTrail = polyUtil.decode(leg.legGeometry.points)\n              return { color: \"gray\", decodedTrail }\n            }),\n          ]\n        }\n        return total\n      }, [])\n      console.log(\"activeTrail:\", activeTrail)\n      console.log(\"routes:\", routes)\n\n      const placeholder = routes[activeTrail].legs.map((leg) => {\n        let color = \"green\"\n        if (leg.mode === \"WALK\") {\n          color = \"lightblue\"\n        } else if (leg.mode === \"SUBWAY\") {\n          color = \"orange\"\n        } else if (leg.mode === \"BUS\") {\n          color = \"blue\"\n        } else if (leg.mode === \"RAIL\") {\n          color = \"red\"\n        }\n        const decodedTrail = polyUtil.decode(leg.legGeometry.points)\n        return { color, decodedTrail, active: true }\n      })\n      alltrails.push(placeholder)\n    }\n    console.log(\"alltrains:\", alltrails)\n    setTrails(alltrails)\n  }, [routes, activeTrail, mapClass])\n  return (\n    <>\n      <Map\n        className={mapClass}\n        center={center}\n        zoom={13}\n        maxZoom={19}\n        attributionControl={true}\n        zoomControl={true}\n        doubleClickZoom={true}\n        scrollWheelZoom={true}\n        dragging={true}\n        animate={true}\n        easeLinearity={0.35}\n        // bounds={latlng}\n        boundsOptions={{ padding: [10, 10] }}\n        onclick={(e) => {\n          console.log(\"lat, lng\", [e.latlng.lat, e.latlng.lng])\n          // setCenter([e.latlng.lat, e.latlng.lng])\n        }}\n      >\n        {trails.map((trail) =>\n          trail.map((leg) => (\n            <Polyline color={leg.color} positions={leg.decodedTrail} />\n          ))\n        )}\n        <TileLayer\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        />\n      </Map>\n    </>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    latlng: state.backgroundMapReducer,\n    routes: state.routeReducer,\n    activeTrail: state.trailReducer,\n    mapClass: state.mapClassReducer,\n  }\n}\n\nconst mapDispatchToProps = {\n  setLatlng: setBackgroundLocation,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BackgroundMap)\n","import React from \"react\"\nimport MainMenu from \"./components/MainMenu\"\nimport SearchForm from \"./components/SearchForm\"\nimport BackgroundMap from \"./components/BackgroundMap\"\nimport \"./styles.css\"\nimport \"./timeline.css\"\n\nconst App = () => {\n  return (\n    <>\n      <MainMenu />\n      <BackgroundMap />\n      <SearchForm />\n    </>\n  )\n}\n\nexport default App\n","import { createStore, combineReducers, applyMiddleware } from \"redux\"\nimport thunk from \"redux-thunk\"\nimport backgroundMapReducer from \"./reducers/backgroundMapReducer\"\nimport routeReducer from \"./reducers/routeReducer\"\nimport trailReducer from \"./reducers/trailReducer\"\nimport mapClassReducer from \"./reducers/mapClassReducer\"\nimport formClassReducer from \"./reducers/formClassReducer\"\nconst reducer = combineReducers({\n  backgroundMapReducer,\n  routeReducer,\n  trailReducer,\n  mapClassReducer,\n  formClassReducer\n})\n\nconst store = createStore(reducer, applyMiddleware(thunk))\n\nexport default store\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\nimport { ApolloProvider } from \"react-apollo\"\nimport { ApolloProvider as ApolloHooksProvider } from \"react-apollo-hooks\"\nimport { Provider } from \"react-redux\"\nimport store from \"./store\"\n\nimport { ApolloClient } from \"apollo-boost\"\nimport { createHttpLink } from \"apollo-link-http\"\nimport { InMemoryCache } from \"apollo-cache-inmemory\"\nimport { setContext } from \"apollo-link-context\"\n\nimport { split } from \"apollo-link\"\nimport { WebSocketLink } from \"apollo-link-ws\"\nimport { getMainDefinition } from \"apollo-utilities\"\n\nimport config from \"./config\"\n// Create a WebSocket link:\nconst wsLink = new WebSocketLink({\n  uri: config.WSPORT,\n  options: {\n    reconnect: true\n  }\n})\n\nconst httpLink = createHttpLink({\n  uri: config.PORT\n})\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem(\"app-user-token\")\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `bearer ${token}` : null\n    }\n  }\n})\n\nconst link = split(\n  ({ query }) => {\n    const { kind, operation } = getMainDefinition(query)\n    return kind === \"OperationDefinition\" && operation === \"subscription\"\n  },\n  wsLink,\n  authLink.concat(httpLink)\n)\n\nconst client = new ApolloClient({\n  link,\n  cache: new InMemoryCache()\n})\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <ApolloHooksProvider client={client}>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </ApolloHooksProvider>\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}