{"version":3,"sources":["config.js","reducers/mapClassReducer.js","reducers/formClassReducer.js","reducers/routeReducer.js","components/MainMenu.js","functions/formatter.js","components/Leg.js","reducers/trailReducer.js","components/RoutePreview.js","components/Routes.js","apis/autocomplete.js","components/AutocompleteSearchForm.js","reducers/backgroundMapReducer.js","apis/planRoute.js","apis/geocoding.js","components/SearchForm.js","components/BackgroundMap.js","App.js","store.js","index.js"],"names":["PORT","process","module","exports","WSPORT","setMapClass","value","type","mapClassReducer","state","arguments","length","undefined","action","setFormClass","formClassReducer","setRoutes","routeReducer","mapDispatchToProps","connect","_ref","react_default","a","createElement","Fragment","Menu","className","inverted","color","borderless","Item","name","active","onClick","Header","formatDistance","distance","result","floorDistance","Math","round","distanceRemainder","distanceKm","floor","concat","formatTime","time","date","Date","hour","getHours","minute","getMinutes","Leg","leg","startTime","from","Icon","trailReducer","RoutePreview","route","console","log","arrival","legs","endTime","departure","vehiclelegs","forEach","mode","maxwidth","map","style","maxWidth","key","duration","stop","icon","size","walkDistance","trip","shortName","setActiveTrail","routes","_useState","useState","_useState2","Object","slicedToArray","activeIndex","setActiveIndex","itineraryid","handleClick","e","titleProps","index","isActive","Accordion","fluid","styled","Title","components_RoutePreview","Content","components_Leg","autocomplete","asyncToGenerator","regenerator_default","mark","_callee","parameter","resultFilterer","searchUrl","autocompleteUrl","geobox","venues","streets","addresses","stops","wrap","_context","prev","next","search","formattedResults","data","features","res","title","properties","label","layer","axios","get","sent","abrupt","_","take","t0","_x","apply","this","AutocompleteForm","fieldName","inputValue","setInputValue","loading","setLoading","_useState3","_useState4","results","setResults","_useDebouncedCallback","useDebouncedCallback","_ref2","autocompleteResults","resetComponent","bounce","Search","onSearchChange","target","onResultSelect","_ref3","placeholder","resultRenderer","_ref4","iconName","setBackgroundLocation","backgroundReducer","planRoute","gql","_templateObject","geocode","coordinates","geometry","setClassState","classState","setFrom","to","setTo","_useState5","_useState6","_useState7","_useState8","planTime","setPlanTime","_useState9","_useState10","planDate","setPlanDate","_useState11","_useState12","arriveBy","setArriveBy","client","useApolloClient","useEffect","now","months","getMonth","years","getFullYear","days","getDate","getCurrentDate","submit","event","coordinatesFrom","coordinatesTo","plannedRoute","newRoutes","preventDefault","geocoding","query","variables","latFrom","lonFrom","latTo","lonTo","Segment","raised","marginBottom","Form","onSubmit","Field","AutocompleteSearchForm","Button","animated","primary","marginRight","visible","hidden","Dropdown","minWidth","paddingLeft","paddingRight","defaultValue","selection","options","text","onChange","Input","components_Routes","Loader","inline","marginTop","setLatlng","latlng","backgroundMapReducer","activeTrail","mapClass","trails","setTrails","alltrails","decodedTrail","polyUtil","decode","legGeometry","points","push","Map","zoom","maxZoom","attributionControl","zoomControl","doubleClickZoom","scrollWheelZoom","dragging","animate","easeLinearity","bounds","boundsOptions","padding","onclick","lat","lng","trail","Polyline","positions","TileLayer","url","attribution","App","components_MainMenu","components_BackgroundMap","components_SearchForm","reducer","combineReducers","store","createStore","applyMiddleware","thunk","wsLink","WebSocketLink","uri","config","reconnect","httpLink","createHttpLink","authLink","setContext","headers","token","localStorage","getItem","objectSpread","authorization","link","split","_getMainDefinition","getMainDefinition","kind","operation","ApolloClient","cache","InMemoryCache","ReactDOM","render","react_apollo_esm","ApolloContext","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.090f3b84.chunk.js","sourcesContent":["if (process.env.NODE_ENV !== \"production\") {\n  require(\"dotenv\").config()\n}\n\nlet WSPORT = process.env.REACT_APP_WEBSOCKET_PORT\nlet PORT = process.env.REACT_APP_HTTP_PORT\n\nif (process.env.NODE_ENV === \"production\") {\n  PORT = process.env.PORT\n}\n\nmodule.exports = {\n  WSPORT,\n  PORT\n}\n","const mapClassReducer = (state = \"startMap\", action) => {\n  switch (action.type) {\n    case \"SET_MAP_CLASS\":\n      return action.value\n    default:\n      return state\n  }\n}\nexport const setMapClass = value => {\n  return {\n    type: \"SET_MAP_CLASS\",\n    value\n  }\n}\nexport default mapClassReducer\n","const formClassReducer = (state = \"startForm\", action) => {\n  switch (action.type) {\n    case \"SET_FORM_CLASS\":\n      return action.value\n    default:\n      return state\n  }\n}\nexport const setFormClass = value => {\n  return {\n    type: \"SET_FORM_CLASS\",\n    value\n  }\n}\nexport default formClassReducer\n","const routeReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"SET_ROUTES\":\n      return action.value\n    default:\n      return state\n  }\n}\nexport const setRoutes = value => {\n  return {\n    type: \"SET_ROUTES\",\n    value\n  }\n}\nexport default routeReducer\n","import React from \"react\"\nimport { Menu, Header } from \"semantic-ui-react\"\nimport { setMapClass } from \"../reducers/mapClassReducer\"\nimport { setFormClass } from \"../reducers/formClassReducer\"\nimport { setRoutes } from \"../reducers/routeReducer\"\nimport { connect } from \"react-redux\"\n\nconst MainMenu = ({ setMapClass, setFormClass, setRoutes }) => {\n  return (\n    <>\n      <Menu className=\"menu\" inverted color=\"blue\" borderless>\n        <Menu.Item\n          name=\"BetterHsl\"\n          active={false}\n          onClick={() => {\n            setFormClass(\"startForm\")\n            setMapClass(\"startMap\")\n            setRoutes([])\n          }}\n        >\n          <Header>BetterHsl</Header>\n        </Menu.Item>\n      </Menu>\n    </>\n  )\n}\n\nconst mapDispatchToProps = {\n  setMapClass,\n  setFormClass,\n  setRoutes\n}\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(MainMenu)\n","export const formatDistance = distance => {\n  const floorDistance = Math.round(distance)\n  let result\n  if (floorDistance > 1000) {\n    const distanceRemainder = Math.round((floorDistance % 1000) / 100)\n    const distanceKm = Math.floor(floorDistance / 1000)\n    result = `${distanceKm}.${distanceRemainder}km`\n  } else {\n    result = `${floorDistance}m`\n  }\n  return result\n}\n\nexport const formatDuration = duration => {\n  const durationInSeconds = duration\n  const durationHours = Math.floor(durationInSeconds / 3600)\n  const durationMinutes = Math.floor((durationInSeconds % 3600) / 60)\n  const conditionalHours = durationHours === 0 ? \"\" : `${durationHours} h`\n  return `${conditionalHours} ${durationMinutes} min`\n}\n\nexport const formatTime = time => {\n  const date = new Date(time)\n  const hour = date.getHours()\n  const minute = date.getMinutes()\n  if (minute < 10) {\n    return `${hour}:0${minute}`\n  }\n  return `${hour}:${minute}`\n}\n\nexport const getCurrentDate = () => {\n  const date = new Date()\n  const months =\n    date.getMonth() < 9 ? `0${date.getMonth() + 1}` : `${date.getMonth() + 1}`\n  const years = date.getFullYear()\n  const days = date.getDate() < 10 ? `0${date.getDate()}` : `${date.getDate()}`\n  return `${years}-${months}-${days}`\n}\n","import React from \"react\"\nimport { formatDistance, formatTime } from \"../functions/formatter\"\nimport { Icon } from \"semantic-ui-react\"\n\nconst Leg = ({ leg }) => {\n  const startTime = formatTime(leg.startTime)\n  const distance = formatDistance(leg.distance)\n\n  if (true)\n    return (\n      <li className=\"timelineEvent\">\n        {/* <label className=\"timelineIcon\" /> */}\n        {/* <div className=\"timelineBody\"> */}\n        <span className=\"timelineTime\">{startTime}</span>\n        <span className=\"timelineSpacer\" />\n\n        <span className=\"timelineFrom\">{leg.from.name}</span>\n\n        <Icon name=\"blind\" />\n        <span className=\"timelineInfo\">{distance}</span>\n        {/* </div> */}\n      </li>\n    )\n\n  return (\n    <div>\n      <p />\n      <div>\n        <b>{leg.from.name}</b>\n        <div>Mode: {leg.mode}</div>\n        {leg.trip && (\n          <div>\n            {leg.trip.route.shortName} {leg.trip.tripHeadsign}\n          </div>\n        )}\n        <div>Distance: {distance}</div>\n        <div>Departure: {startTime}</div>\n        <div>To: {leg.to.name}</div>\n      </div>\n    </div>\n  )\n}\nexport default Leg\n","const trailReducer = (state = 0, action) => {\n  switch (action.type) {\n    case \"SET_ACTIVE_TRAIL\":\n      return action.value\n    default:\n      return state\n  }\n}\n\nexport const setActiveTrail = value => {\n  return {\n    type: \"SET_ACTIVE_TRAIL\",\n    value\n  }\n}\n\nexport default trailReducer\n","import React from \"react\"\nimport { formatDistance, formatTime } from \"../functions/formatter\"\nimport { Icon } from \"semantic-ui-react\"\n\nconst RoutePreview = ({ route }) => {\n  console.log(\"route:\", route)\n  const arrival = formatTime(route.legs[route.legs.length - 1].endTime)\n  const departure = formatTime(route.legs[0].startTime)\n  let vehiclelegs = 0\n  route.legs.forEach(leg => {\n    if (leg.mode !== \"WALK\") vehiclelegs++\n  })\n\n  const maxwidth = 42 / vehiclelegs + \"ch\"\n\n  return (\n    <>\n      <span className=\"routePreviewContainer\">\n        {route.legs.map(leg => {\n          if (leg.mode === \"WALK\") {\n            return <></>\n          }\n          return (\n            <span\n              className=\"routePreview\"\n              style={{ maxWidth: maxwidth }}\n              key={leg.duration}\n            >\n              {leg.from.stop.name}\n            </span>\n          )\n        })}\n      </span>\n      <div />\n      <span className=\"divided\">\n        <span className=\"previewDeparture\">{departure}</span>\n\n        {route.legs.map(leg => {\n          let color = \"red\"\n          let icon = \"train\"\n          if (leg.mode === \"WALK\" && route.legs.length !== 1) {\n            return <></>\n          } else if (leg.mode === \"SUBWAY\") {\n            color = \"orange\"\n            icon = \"subway\"\n          } else if (leg.mode === \"BUS\") {\n            color = \"blue\"\n            icon = \"bus\"\n          } else if (leg.mode === \"WALK\") {\n            color = \"lightblue\"\n            icon = \"blind\"\n          }\n          return (\n            <>\n              <span>\n                <Icon name={icon} />\n              </span>\n              <span style={{ color }} className=\"divider\" />\n            </>\n          )\n        })}\n        <span className=\"previewArrival\">{arrival}</span>\n        <Icon name=\"angle down\" className=\"expand_route\" size=\"big\" />\n      </span>\n      <div>\n        <span className=\"routePreviewContainer\">\n          {route.legs.map(leg => {\n            if (leg.mode === \"WALK\") {\n              if (route.legs.length === 1) {\n                return (\n                  <span className=\"routePreview\" style={{ maxWidth: maxwidth }}>\n                    {formatDistance(route.walkDistance)}\n                  </span>\n                )\n              }\n              return <></>\n            }\n            return (\n              <span className=\"routePreview\" style={{ maxWidth: maxwidth }}>\n                {leg.trip.route.shortName}\n              </span>\n            )\n          })}\n        </span>\n      </div>\n    </>\n  )\n}\nexport default RoutePreview\n","import React, { useState } from \"react\"\nimport Leg from \"./Leg\"\nimport { Accordion } from \"semantic-ui-react\"\nimport { setActiveTrail } from \"../reducers/trailReducer\"\nimport { connect } from \"react-redux\"\nimport RoutePreview from \"./RoutePreview\"\n\nconst Routes = ({ setActiveTrail, routes }) => {\n  const [activeIndex, setActiveIndex] = useState(-1)\n  let itineraryid = -1\n\n  const handleClick = (e, titleProps) => {\n    const { index } = titleProps\n    const isActive = activeIndex === index ? -1 : index\n    if (isActive >= 0) {\n      setActiveTrail(isActive)\n    }\n    setActiveIndex(isActive)\n  }\n\n  if (routes.length === 0) return <></>\n\n  return (\n    <>\n      <Accordion fluid styled>\n        {routes.map(route => {\n          itineraryid++\n          return (\n            <>\n              <Accordion.Title\n                onClick={handleClick}\n                index={itineraryid}\n                active={activeIndex === itineraryid}\n              >\n                <span key={route.distance}>\n                  <RoutePreview route={route} />\n                </span>\n              </Accordion.Title>\n              <Accordion.Content active={activeIndex === itineraryid}>\n                <span className=\"timeline\">\n                  {route.legs.map(leg => (\n                    <div key={leg.distance}>\n                      <Leg leg={leg} />\n                    </div>\n                  ))}\n                </span>\n              </Accordion.Content>\n            </>\n          )\n        })}\n      </Accordion>\n    </>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    routes: state.routeReducer\n  }\n}\n\nconst mapDispatchToProps = {\n  setActiveTrail\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Routes)\n","import axios from \"axios\"\nimport _ from \"lodash\"\n\nconst autocomplete = async parameter => {\n  let result = []\n\n  const resultFilterer = search => {\n    const formattedResults = search.data.features.map(res => ({\n      title: res.properties.label,\n      layer: res.properties.layer\n    }))\n    result = result.concat(formattedResults)\n  }\n\n  if (parameter) {\n    try {\n      const searchUrl = \"https://api.digitransit.fi/geocoding/v1/search\"\n      const autocompleteUrl =\n        \"https://api.digitransit.fi/geocoding/v1/autocomplete\"\n\n      const geobox =\n        \"boundary.polygon=25.5345%2060.2592%2C25.3881%2060.1693%2C25.3559%2060.102%2C25.3293%2059.9371%2C24.2831%2059.78402%2C24.2721%2059.95501%2C24.2899%2060.00895%2C24.3087%2060.01947%2C24.1994%2060.12753%2C24.1362%2060.1114%2C24.1305%2060.12847%2C24.099%2060.1405%2C24.0179%2060.1512%2C24.0049%2060.1901%2C24.0445%2060.1918%2C24.0373%2060.2036%2C24.0796%2060.2298%2C24.1652%2060.2428%2C24.3095%2060.2965%2C24.3455%2060.2488%2C24.428%2060.3002%2C24.5015%2060.2872%2C24.4888%2060.3306%2C24.5625%2060.3142%2C24.5957%2060.3242%2C24.6264%2060.3597%2C24.666%2060.3638%2C24.7436%2060.3441%2C24.9291%2060.4523%2C24.974%2060.5253%2C24.9355%2060.5131%2C24.8971%2060.562%2C25.0388%2060.5806%2C25.1508%2060.5167%2C25.1312%2060.4938%2C25.0385%2060.512%2C25.057%2060.4897%2C25.0612%2060.4485%2C25.1221%2060.4474%2C25.1188%2060.4583%2C25.149%2060.4621%2C25.1693%2060.5062%2C25.2242%2060.5016%2C25.3661%2060.4118%2C25.3652%2060.3756%2C25.5345%2060.2592&size=4\"\n\n      const venues = await axios.get(\n        `${searchUrl}?text=${parameter}&focus.point.lat=60.168656&focus.point.lon=24.940899&layers=venue&${geobox}`\n      )\n      resultFilterer(venues)\n\n      const streets = await axios.get(\n        `${searchUrl}?text=${parameter}&focus.point.lat=60.168656&focus.point.lon=24.940899&layers=street&${geobox}`\n      )\n\n      resultFilterer(streets)\n\n      const addresses = await axios.get(\n        `${searchUrl}?text=${parameter}&focus.point.lat=60.168656&focus.point.lon=24.940899&layers=address&${geobox}`\n      )\n\n      resultFilterer(addresses)\n\n      const stops = await axios.get(\n        `${autocompleteUrl}?text=${parameter}&focus.point.lat=60.168656&focus.point.lon=24.940899&layers=stop&${geobox}`\n      )\n      console.log(\"stops:\", stops)\n\n      resultFilterer(stops)\n\n      return _.take(result, 16)\n    } catch (error) {\n      console.log(\"REST API ERROR: \", error)\n    }\n  }\n}\n\nexport default autocomplete\n","import React, { useState } from \"react\"\nimport { Search, Icon } from \"semantic-ui-react\"\nimport autocomplete from \"../apis/autocomplete\"\nimport useDebouncedCallback from \"use-debounce/lib/callback\"\n\nconst AutocompleteForm = ({ fieldName, inputValue, setInputValue }) => {\n  const [loading, setLoading] = useState(false)\n  const [results, setResults] = useState([])\n  const [bounce] = useDebouncedCallback(\n    async value => {\n      if (value.length < 1) return resetComponent()\n\n      const autocompleteResults = await autocomplete(value)\n      console.log(\"autocompleteResults:\", autocompleteResults)\n\n      setLoading(false)\n      setResults(autocompleteResults)\n    },\n    200,\n    []\n  )\n\n  const resetComponent = () => {\n    setLoading(false)\n    setResults([])\n    setInputValue(\"\")\n  }\n\n  const handleResultSelect = (e, { result }) => setInputValue(result.title)\n\n  const resultRenderer = ({ title, layer }) => {\n    /* Return an appropriate icon based on the layer of the autofill result */\n    let iconName\n    if (layer === \"venue\") {\n      iconName = \"building\"\n    } else if (layer === \"stop\") {\n      iconName = \"flag\"\n    } else if (layer === \"address\") {\n      iconName = \"point\"\n    } else {\n      iconName = \"map signs\"\n    }\n    return (\n      <div>\n        <Icon name={iconName} />\n        {title}\n      </div>\n    )\n  }\n  return (\n    <Search\n      fluid\n      loading={loading}\n      onSearchChange={e => {\n        setLoading(true)\n        setInputValue(e.target.value)\n        bounce(e.target.value)\n      }}\n      onResultSelect={handleResultSelect}\n      results={results}\n      value={inputValue}\n      placeholder={fieldName}\n      resultRenderer={resultRenderer}\n    />\n  )\n}\n\nexport default AutocompleteForm\n","const backgroundReducer = (\n  state = [\n    [60.1673319317496, 24.80082397460938],\n    [60.158966553797576, 25.063716125488285]\n  ],\n  action\n) => {\n  switch (action.type) {\n    case \"SET_BACKGROUND_MAP_LOCATION\":\n      return action.value\n    default:\n      return state\n  }\n}\nexport const setBackgroundLocation = value => {\n  return {\n    type: \"SET_BACKGROUND_MAP_LOCATION\",\n    value\n  }\n}\n\nexport default backgroundReducer\n","import { gql } from \"apollo-boost\"\n\nconst planRoute = gql`\n  query planRoute(\n    $latFrom: Float\n    $lonFrom: Float\n    $latTo: Float\n    $lonTo: Float\n    $time: String\n    $date: String\n    $arriveBy: Boolean\n  ) {\n    planRoute(\n      latFrom: $latFrom\n      lonFrom: $lonFrom\n      latTo: $latTo\n      lonTo: $lonTo\n      time: $time\n      date: $date\n      arriveBy: $arriveBy\n    ) {\n      walkDistance\n      duration\n      legs {\n        legGeometry {\n          points\n        }\n        mode\n        startTime\n        endTime\n        trip {\n          route {\n            shortName\n            longName\n          }\n          tripHeadsign\n          stops {\n            name\n          }\n        }\n        from {\n          lat\n          lon\n          name\n          stop {\n            code\n            name\n          }\n        }\n        to {\n          lat\n          lon\n          name\n        }\n        distance\n      }\n    }\n  }\n`\nexport default planRoute\n","import axios from \"axios\"\n\nconst geocode = async value => {\n  const result = await axios.get(\n    `https://api.digitransit.fi/geocoding/v1/search?text=${value}&size=1`\n  )\n  const coordinates = result.data.features[0].geometry.coordinates\n  return coordinates\n}\n\nexport default geocode\n","import React, { useState, useEffect } from \"react\"\nimport { useApolloClient } from \"react-apollo-hooks\"\nimport Routes from \"./Routes\"\nimport AutocompleteSearchForm from \"./AutocompleteSearchForm\"\nimport {\n  Segment,\n  Form,\n  Button,\n  Icon,\n  Loader,\n  Dropdown,\n  Input\n} from \"semantic-ui-react\"\nimport { connect } from \"react-redux\"\nimport { setRoutes } from \"../reducers/routeReducer\"\nimport { setBackgroundLocation } from \"../reducers/backgroundMapReducer\"\nimport { setMapClass } from \"../reducers/mapClassReducer\"\nimport { setFormClass } from \"../reducers/formClassReducer\"\nimport { formatTime, getCurrentDate } from \"../functions/formatter\"\nimport planRoute from \"../apis/planRoute\"\nimport geocoding from \"../apis/geocoding\"\n\nconst SearchForm = ({\n  setRoutes,\n  setBackgroundLocation,\n  setMapClass,\n  classState,\n  setClassState\n}) => {\n  const [from, setFrom] = useState(\"\")\n  const [to, setTo] = useState(\"\")\n  const [loading, setLoading] = useState(false)\n  const [planTime, setPlanTime] = useState(\"\")\n  const [planDate, setPlanDate] = useState(\"\")\n  const [arriveBy, setArriveBy] = useState(false)\n\n  const client = useApolloClient()\n  useEffect(() => {\n    setPlanTime(formatTime(Date.now()))\n    setPlanDate(getCurrentDate())\n  }, [])\n\n  const submit = async event => {\n    event.preventDefault()\n    setRoutes([])\n    if (from !== \"\" && to !== \"\") {\n      setLoading(true)\n      setClassState(\"resultsForm\")\n\n      const coordinatesFrom = await geocoding(from)\n      const coordinatesTo = await geocoding(to)\n\n      setBackgroundLocation([\n        [coordinatesFrom[1], coordinatesFrom[0]],\n        [coordinatesTo[1], coordinatesTo[0]]\n      ])\n      setMapClass(\"resultsMap\")\n\n      const plannedRoute = await client.query({\n        query: planRoute,\n        variables: {\n          latFrom: coordinatesFrom[1],\n          lonFrom: coordinatesFrom[0],\n          latTo: coordinatesTo[1],\n          lonTo: coordinatesTo[0],\n          time: `${planTime}:00`,\n          date: planDate,\n          arriveBy\n        }\n      })\n      const newRoutes = plannedRoute.data.planRoute\n      setLoading(false)\n      setRoutes(newRoutes)\n    }\n  }\n\n  return (\n    <div className={classState}>\n      <Segment raised style={{ marginBottom: 0 }}>\n        <Form onSubmit={submit}>\n          <Form.Field>\n            <AutocompleteSearchForm\n              inputValue={from}\n              setInputValue={setFrom}\n              fieldName=\"from\"\n            />\n          </Form.Field>\n          <Form.Field>\n            <AutocompleteSearchForm\n              inputValue={to}\n              setInputValue={setTo}\n              fieldName=\"to\"\n            />\n          </Form.Field>\n\n          <Form.Field>\n            <div className=\"toggleSearchTime\">\n              <Button animated primary type=\"submit\" style={{ marginRight: 0 }}>\n                <Button.Content visible>Search</Button.Content>\n                <Button.Content hidden>\n                  <Icon name=\"arrow right\" />\n                </Button.Content>\n              </Button>\n              <span>\n                <Dropdown\n                  style={{\n                    minWidth: \"11ch\",\n                    paddingLeft: \"10px\",\n                    paddingRight: \"10px\"\n                  }}\n                  defaultValue={false}\n                  selection\n                  fluid\n                  options={[\n                    { key: 1, value: false, text: \"leave at\" },\n                    { key: 2, value: true, text: \"arrive by\" }\n                  ]}\n                  onChange={(event, { value }) => {\n                    setArriveBy(value)\n                  }}\n                />\n              </span>\n              <span>\n                <Input\n                  className=\"timeInput\"\n                  defaultValue={planTime}\n                  type=\"time\"\n                  onChange={event => setPlanTime(event.target.value)}\n                />\n              </span>\n              <span>\n                <Input\n                  type=\"date\"\n                  style={{ maxWidth: \"163px\" }}\n                  value={planDate}\n                  onChange={event => setPlanDate(event.target.value)}\n                />\n              </span>\n            </div>\n          </Form.Field>\n        </Form>\n      </Segment>\n      <Routes />\n      <Loader\n        inline=\"centered\"\n        active={loading}\n        style={{ marginTop: \"10px\" }}\n      />\n    </div>\n  )\n}\nconst mapStateToProps = state => ({\n  routes: state.routeReducer,\n  classState: state.formClassReducer\n})\nconst mapDispatchToProps = {\n  setRoutes,\n  setBackgroundLocation,\n  setMapClass,\n  setClassState: setFormClass\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchForm)\n","import React, { useState, useEffect } from \"react\"\nimport \"leaflet/dist/leaflet.css\"\nimport { Map, Marker, Popup, TileLayer, Polyline } from \"react-leaflet\"\nimport { connect } from \"react-redux\"\nimport { setBackgroundLocation } from \"../reducers/backgroundMapReducer\"\nimport { setActiveTrail } from \"../reducers/trailReducer\"\nimport polyUtil from \"polyline-encoded\"\n\nconst BackgroundMap = ({\n  latlng,\n  setLatlng,\n  routes,\n  activeTrail,\n  mapClass\n}) => {\n  const [trails, setTrails] = useState([])\n  console.log(\"mapclass bgmapin alussa: \", mapClass)\n\n  useEffect(() => {\n    let alltrails = []\n    //tähän vielä joku filteröivä ehto, active trail rendataan nyt kahdesti\n    if (routes.length > 0) {\n      alltrails = routes.map(route =>\n        route.legs.map(leg => {\n          const decodedTrail = polyUtil.decode(leg.legGeometry.points)\n          return { color: \"gray\", decodedTrail }\n        })\n      )\n      console.log(\"activeTrail:\", activeTrail)\n      console.log(\"routes:\", routes)\n\n      const placeholder = routes[activeTrail].legs.map(leg => {\n        let color = \"green\"\n        if (leg.mode === \"WALK\") {\n          color = \"lightblue\"\n        } else if (leg.mode === \"SUBWAY\") {\n          color = \"orange\"\n        } else if (leg.mode === \"BUS\") {\n          color = \"blue\"\n        } else if (leg.mode === \"RAIL\") {\n          color = \"red\"\n        }\n        const decodedTrail = polyUtil.decode(leg.legGeometry.points)\n        return { color, decodedTrail, active: true }\n      })\n      alltrails.push(placeholder)\n    }\n    console.log(\"alltrails:\", alltrails)\n    setTrails(alltrails)\n  }, [routes, activeTrail, mapClass])\n  return (\n    <>\n      {console.log(\"latlng juuri ennen mappia: \", latlng)}\n      {console.log(\"className ennen mappia: \", mapClass)}\n      <Map\n        className={mapClass}\n        zoom={13}\n        maxZoom={19}\n        attributionControl={true}\n        zoomControl={true}\n        doubleClickZoom={true}\n        scrollWheelZoom={true}\n        dragging={true}\n        animate={true}\n        easeLinearity={0.35}\n        bounds={latlng}\n        boundsOptions={{ padding: [10, 10] }}\n        onclick={e => {\n          console.log(\"lat, lng\", [e.latlng.lat, e.latlng.lng])\n        }}\n      >\n        {console.log(\"routes bgmapissa: \", routes)}\n        {console.log(\"trails ennen rendausta: \", trails)}\n        {trails.map(trail =>\n          trail.map(leg => (\n            <Polyline color={leg.color} positions={leg.decodedTrail} />\n          ))\n        )}\n        {console.log(\"trails rendauksen jälkeen: \", trails)}\n        <TileLayer\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        />\n      </Map>\n    </>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    latlng: state.backgroundMapReducer,\n    routes: state.routeReducer,\n    activeTrail: state.trailReducer,\n    mapClass: state.mapClassReducer\n  }\n}\n\nconst mapDispatchToProps = {\n  setLatlng: setBackgroundLocation\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(BackgroundMap)\n","import React from \"react\"\nimport MainMenu from \"./components/MainMenu\"\nimport SearchForm from \"./components/SearchForm\"\nimport BackgroundMap from \"./components/BackgroundMap\"\nimport \"./styles.css\"\nimport \"./timeline.css\"\n\nconst App = () => {\n  return (\n    <>\n      <MainMenu />\n      <BackgroundMap />\n      <SearchForm />\n    </>\n  )\n}\n\nexport default App\n","import { createStore, combineReducers, applyMiddleware } from \"redux\"\nimport thunk from \"redux-thunk\"\nimport backgroundMapReducer from \"./reducers/backgroundMapReducer\"\nimport routeReducer from \"./reducers/routeReducer\"\nimport trailReducer from \"./reducers/trailReducer\"\nimport mapClassReducer from \"./reducers/mapClassReducer\"\nimport formClassReducer from \"./reducers/formClassReducer\"\nconst reducer = combineReducers({\n  backgroundMapReducer,\n  routeReducer,\n  trailReducer,\n  mapClassReducer,\n  formClassReducer\n})\n\nconst store = createStore(reducer, applyMiddleware(thunk))\n\nexport default store\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\nimport { ApolloProvider } from \"react-apollo\"\nimport { ApolloProvider as ApolloHooksProvider } from \"react-apollo-hooks\"\nimport { Provider } from \"react-redux\"\nimport store from \"./store\"\n\nimport { ApolloClient } from \"apollo-boost\"\nimport { createHttpLink } from \"apollo-link-http\"\nimport { InMemoryCache } from \"apollo-cache-inmemory\"\nimport { setContext } from \"apollo-link-context\"\n\nimport { split } from \"apollo-link\"\nimport { WebSocketLink } from \"apollo-link-ws\"\nimport { getMainDefinition } from \"apollo-utilities\"\n\nimport config from \"./config\"\n// Create a WebSocket link:\nconst wsLink = new WebSocketLink({\n  uri: config.WSPORT,\n  options: {\n    reconnect: true\n  }\n})\n\nconst httpLink = createHttpLink({\n  uri: config.PORT\n})\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem(\"app-user-token\")\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `bearer ${token}` : null\n    }\n  }\n})\n\nconst link = split(\n  ({ query }) => {\n    const { kind, operation } = getMainDefinition(query)\n    return kind === \"OperationDefinition\" && operation === \"subscription\"\n  },\n  wsLink,\n  authLink.concat(httpLink)\n)\n\nconst client = new ApolloClient({\n  link,\n  cache: new InMemoryCache()\n})\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <ApolloHooksProvider client={client}>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </ApolloHooksProvider>\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}